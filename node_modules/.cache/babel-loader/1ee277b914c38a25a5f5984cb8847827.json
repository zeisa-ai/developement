{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zinabeisa/Desktop/---/cs1300/development/developement/src/FilteredList.js\";\nimport React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport List from \"./List\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props); //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n\n    this.onSearch = event => {\n      this.setState({\n        search: event.target.value.trim().toLowerCase()\n      });\n    };\n\n    this.onSelectFilterType = event => {\n      //TODO Set the state of the filter type in this.state\n      this.setState({\n        type: event\n      });\n    };\n\n    this.onSelectFilterCompany = event => {\n      //TODO Set the state of the filter type in this.state\n      this.setState({\n        company: event\n      });\n    };\n\n    this.onSort = event => {\n      //TODO Set the state of the filter type in this.state\n      this.setState({\n        sort: event\n      });\n    };\n\n    this.matchesFilterType = item => {\n      // TODO: add conditions to check if item type is equal to selected type\n      if (this.state.type === \"All\") {\n        return true;\n      } else if (this.state.type === item.type) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.matchesFilterCompany = item => {\n      // TODO: add conditions to check if item type is equal to selected type\n      if (this.state.company === \"All\") {\n        return true;\n      } else if (this.state.company === item.company) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.sortOptions = (item1, item2) => {\n      if (this.state.sort === \"All\") {\n        return 0;\n      } else if (this.state.sort === \"Popularity\") {\n        return item1.popularity - item2.popularity;\n      }\n    };\n\n    this.filterAndSearch = item => {\n      return item.name.toLowerCase().search(this.state.search) !== -1 && this.matchesFilterType(item) && this.matchesFilterCompany(item);\n    };\n\n    this.state = {\n      search: \"\",\n      type: \"All\",\n      company: \"All\",\n      sort: \"All\"\n    };\n  } //Sets the state whenever the user types on the search bar\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Type\",\n          id: \"dropdown-basic-button\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"All\",\n            onSelect: this.onSelectFilterType,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Desktop\",\n            onSelect: this.onSelectFilterType,\n            children: \"Desktop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Laptop\",\n            onSelect: this.onSelectFilterType,\n            children: \"Laptop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Tablet\",\n            onSelect: this.onSelectFilterType,\n            children: \"Tablet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Phone\",\n            onSelect: this.onSelectFilterType,\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Brand\",\n          id: \"dropdown-basic-button\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"All\",\n            onSelect: this.onSelectFilterCompany,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Apple\",\n            onSelect: this.onSelectFilterCompany,\n            children: \"Apple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Microsoft\",\n            onSelect: this.onSelectFilterCompany,\n            children: \"Microsoft\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Samsung\",\n            onSelect: this.onSelectFilterCompany,\n            children: \"Samsung\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Dell\",\n            onSelect: this.onSelectFilterCompany,\n            children: \"Dell\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Sort\",\n          id: \"dropdown-basic-button\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"All\",\n            onSelect: this.onSort,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Popularity\",\n            onSelect: this.onSort,\n            children: \"Popularity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          id: \"search\",\n          onChange: this.onSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Type: \", this.state.type, \"  Brand: \", this.state.company, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" Sort by: \", this.state.sort, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        items: this.props.items.filter(this.filterAndSearch).sort(this.sortOptions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FilteredList;","map":{"version":3,"sources":["/Users/zinabeisa/Desktop/---/cs1300/development/developement/src/FilteredList.js"],"names":["React","Component","DropdownButton","Dropdown","List","FilteredList","constructor","props","onSearch","event","setState","search","target","value","trim","toLowerCase","onSelectFilterType","type","onSelectFilterCompany","company","onSort","sort","matchesFilterType","item","state","matchesFilterCompany","sortOptions","item1","item2","popularity","filterAndSearch","name","render","items","filter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport List from \"./List\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    this.state = {\n      search: \"\",\n      type: \"All\",\n      company: \"All\",\n      sort: \"All\",\n\n    };\n  }\n\n  //Sets the state whenever the user types on the search bar\n  onSearch = event => {\n    this.setState({ search: event.target.value.trim().toLowerCase() });\n  };\n\n  /*\n   * This function gets called every time a new filter type is selected in the dropdown. Your job is to handle the state\n   * changes that should occur when a new filter type is selected.\n   */\n\n  onSelectFilterType = event => {\n    //TODO Set the state of the filter type in this.state\n    this.setState({ type: event});\n  };\n\n  onSelectFilterCompany = event => {\n    //TODO Set the state of the filter type in this.state\n    this.setState({ company: event});\n  };\n  onSort = event => {\n    //TODO Set the state of the filter type in this.state\n    this.setState({ sort: event});\n  };\n  //onFavorite = event => {\n    //TODO Set the state of the filter type in this.state\n  //  this.setState({ favorited: event});\n//  } ;\n\n  /*\n   * This function should determine whether the item being passed in matches the type\n   * that we are filtering on. Remember that the selected type we are filtering on is stored\n   * in this.state!\n   * Input: An element from your List component\n   * Output: true or false\n   */\n  matchesFilterType = item => {\n    // TODO: add conditions to check if item type is equal to selected type\n    if(this.state.type === \"All\"){\n      return true;\n    }\n    else if(this.state.type === item.type){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  matchesFilterCompany = item => {\n    // TODO: add conditions to check if item type is equal to selected type\n    if(this.state.company === \"All\"){\n      return true;\n    }\n    else if(this.state.company === item.company){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  sortOptions = (item1, item2) => {\n      if (this.state.sort === \"All\") {\n        return 0;\n      }\n      else if (this.state.sort === \"Popularity\"){\n        return item1.popularity - item2.popularity;\n      }\n    }\n\n  /*\n   * The function is passed into a builtin filter() function. filter() calls this function on every element\n   * in the list. If this fucntion returns true for a given element, filter() will add that element to its\n   * return list.\n   */\n  filterAndSearch = item => {\n    return item.name.toLowerCase().search(this.state.search) !== -1 && this.matchesFilterType(item) && this.matchesFilterCompany(item);\n  }\n\n  render() {\n    return (\n      <div className=\"filter-list\">\n\n        {/* TODO: Add more menu items with onSelect handlers*/}\n        <div className = \"buttons\">\n        <DropdownButton title=\"Type\" id=\"dropdown-basic-button\">\n          <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterType}>\n            All\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Desktop\" onSelect={this.onSelectFilterType}>\n            Desktop\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Laptop\" onSelect={this.onSelectFilterType}>\n            Laptop\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Tablet\" onSelect={this.onSelectFilterType}>\n            Tablet\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Phone\" onSelect={this.onSelectFilterType}>\n            Phone\n          </Dropdown.Item>\n        </DropdownButton>\n\n        <DropdownButton title=\"Brand\" id=\"dropdown-basic-button\">\n          <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterCompany}>\n            All\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Apple\" onSelect={this.onSelectFilterCompany}>\n            Apple\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Microsoft\" onSelect={this.onSelectFilterCompany}>\n            Microsoft\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Samsung\" onSelect={this.onSelectFilterCompany}>\n            Samsung\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Dell\" onSelect={this.onSelectFilterCompany}>\n            Dell\n          </Dropdown.Item>\n        </DropdownButton>\n\n        <DropdownButton title=\"Sort\" id=\"dropdown-basic-button\">\n          <Dropdown.Item eventKey=\"All\" onSelect={this.onSort}>\n            All\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Popularity\" onSelect={this.onSort}>\n            Popularity\n          </Dropdown.Item>\n\n\n         </DropdownButton>\n      </div>\n        <div className = \"search\"> <input type=\"text\" placeholder=\"Search\" id=\"search\" onChange={this.onSearch} />\n        </div>\n        <p> Type: {this.state.type}  Brand: {this.state.company} </p>\n        <p> Sort by: {this.state.sort} </p>\n        <List items={this.props.items.filter(this.filterAndSearch).sort(this.sortOptions)} />\n      </div>\n    );\n  }\n}\n\nexport default FilteredList;\n"]},"metadata":{},"sourceType":"module"}