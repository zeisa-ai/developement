{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zinabeisa/Desktop/---/cs1300/development/developement/src/FilteredList.js\";\nimport React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport DisplayList from \"./DisplayList\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props); //state variables\n\n    this.typeFilter = event => {\n      this.setState({\n        type: event\n      });\n    };\n\n    this.sizeFilter = event => {\n      this.setState({\n        size: event\n      });\n    };\n\n    this.selectSort = event => {\n      this.setState({\n        sort: event\n      });\n    };\n\n    this.isFilterType = item => {\n      if (this.state.type === \"All\") {\n        return true;\n      } else if (this.state.type === item.type) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.isFilterSize = item => {\n      if (this.state.size === \"All\") {\n        return true;\n      } else if (this.state.size === item.size) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.sortCategories = (item1, item2) => {\n      if (this.state.sort === \"All\") {\n        return 0;\n      } else if (this.state.sort === \"rating\") {\n        return item1.rating - item2.rating;\n      }\n    };\n\n    this.filter = item => {\n      return this.isFilterType(item) && this.isFilterSize(item);\n    };\n\n    this.addToCart = item => {\n      const array = [...this.state.shopping, item];\n      this.setState({\n        shopping: array,\n        total: this.state.total + item.price\n      });\n    };\n\n    this.removeFromCart = item => {\n      console.log(item);\n      var removeItem = this.state.shopping.filter(item, item.key);\n      removeItem.splice(item, item.key);\n      this.setState({\n        shopping: removeItem\n      });\n\n      if (this.state.total > 0) {\n        this.setState({\n          shopping: removeItem,\n          total: this.state.total - item.price\n        });\n      }\n    };\n\n    this.state = {\n      shopping: [],\n      search: \"\",\n      type: \"All\",\n      size: \"All\",\n      sort: \"All\",\n      items: this.props.items,\n      total: 0\n    };\n  } //filter function that sets the type state\n\n\n  //this render functions displays all the buttons and slectioin criteria for\n  //all the filter and sort options\n  //styling doe in index.css\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Type\",\n          id: \"dropdownButton\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"All\",\n            onSelect: this.typeFilter,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"berry\",\n            onSelect: this.typeFilter,\n            children: \"Berry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"drupe\",\n            onSelect: this.typeFilter,\n            children: \"Drupe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"citrus\",\n            onSelect: this.typeFilter,\n            children: \"Citrus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"pome\",\n            onSelect: this.typeFilter,\n            children: \"Pome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Size\",\n          id: \"dropdownButton\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"All\",\n            onSelect: this.sizeFilter,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"Small\",\n            onSelect: this.sizeFilter,\n            children: \"Small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"Medium\",\n            onSelect: this.sizeFilter,\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"Large\",\n            onSelect: this.sizeFilter,\n            children: \"Large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Sort\",\n          id: \"dropdownButton\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"All\",\n            onSelect: this.selectSort,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            id: \"text\",\n            eventKey: \"rating\",\n            onSelect: this.selectSort,\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DisplayList, {\n        items: this.props.items.filter(this.filter).sort(this.sortCategories),\n        addToCart: this.addToCart,\n        removeFromCart: this.removeFromCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        id: \"title\",\n        children: \" Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        id: \"text\",\n        children: [\" Total = $\", Math.abs(this.state.total.toFixed())]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(DisplayList, {\n        items: this.state.shopping,\n        removeFromCart: this.removeFromCart,\n        addToCart: this.addToCart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FilteredList;","map":{"version":3,"sources":["/Users/zinabeisa/Desktop/---/cs1300/development/developement/src/FilteredList.js"],"names":["React","Component","DropdownButton","Dropdown","DisplayList","FilteredList","constructor","props","typeFilter","event","setState","type","sizeFilter","size","selectSort","sort","isFilterType","item","state","isFilterSize","sortCategories","item1","item2","rating","filter","addToCart","array","shopping","total","price","removeFromCart","console","log","removeItem","key","splice","search","items","render","Math","abs","toFixed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport DisplayList from \"./DisplayList\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n//state variables\n    this.state = {\n      shopping: [],\n      search: \"\",\n      type: \"All\",\n      size: \"All\",\n      sort: \"All\",\n      items: this.props.items,\n      total:0,\n\n    };\n  }\n\n//filter function that sets the type state\n  typeFilter = event => {\n\n    this.setState({ type: event});\n  };\n\n//filter function that sets the size state\n  sizeFilter = event => {\n\n    this.setState({ size: event});\n  };\n\n  //sort function that sets the sort state\n  selectSort = event => {\n\n    this.setState({ sort: event});\n  };\n\n//helper function to check if the type filter is selected (returns true or false)\n  isFilterType = item => {\n\n    if(this.state.type === \"All\"){\n      return true;\n    }\n    else if(this.state.type === item.type){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  //helper function to check if the size filter is selected (returns true or false)\n  isFilterSize = item => {\n    if(this.state.size === \"All\"){\n      return true;\n    }\n    else if(this.state.size === item.size){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n\n  //helper function to that takes in two items compares their rating value (defined in the list of produce) to then sort these valuess\n  sortCategories = (item1, item2) => {\n      if (this.state.sort === \"All\") {\n        return 0;\n      }\n      else if (this.state.sort === \"rating\"){\n        return item1.rating - item2.rating;\n      }\n    }\n//this is a helper function that checks if the item passed can fit into either of the filter functions defined earlier\n  filter = item => {\n    return this.isFilterType(item) && this.isFilterSize(item);\n  }\n\n//this is aggregator function that adds items to the cart and updates the total amount\naddToCart = item=>{\n  const array = [...this.state.shopping, item]\n  this.setState({shopping: array, total: this.state.total+item.price});\n};\n\n//this is aggregator function that removes items to the cart and updates the total amount\n//I had A LOT of issues with this code and still is a bit buggy since it doesn't\n//remove the element I click to remove (instead removes anything but the one I clicked on)\n//however I tried more than 5 different implementations and kept getting the same outcome :(\n\n\nremoveFromCart = item => {\n  console.log(item);\n  var removeItem = this.state.shopping.filter(item, item.key);\n    removeItem.splice(item, item.key);\n    this.setState({shopping: removeItem });\nif(this.state.total >0){\n  this.setState({shopping: removeItem, total: this.state.total-item.price});\n\n}\n};\n\n//this render functions displays all the buttons and slectioin criteria for\n//all the filter and sort options\n//styling doe in index.css\n  render() {\n    return (\n      <div className=\"filter-list\">\n        <div className = \"buttons\">\n        {/* filter by Type of fruit criteria*/}\n        <DropdownButton title=\"Type\" id=\"dropdownButton\">\n          <Dropdown.Item eventKey=\"All\" onSelect={this.typeFilter}>\n            All\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\" eventKey=\"berry\" onSelect={this.typeFilter} >\n            Berry\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\" eventKey=\"drupe\" onSelect={this.typeFilter}>\n            Drupe\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\" eventKey=\"citrus\" onSelect={this.typeFilter}>\n            Citrus\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\" eventKey=\"pome\" onSelect={this.typeFilter}>\n            Pome\n          </Dropdown.Item>\n        </DropdownButton>\n\n        {/*/filter by Size criteria*/}\n        <DropdownButton title=\"Size\" id=\"dropdownButton\">\n          <Dropdown.Item id=\"text\"eventKey=\"All\" onSelect={this.sizeFilter}>\n              All\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\"eventKey=\"Small\" onSelect={this.sizeFilter}>\n            Small\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\" eventKey=\"Medium\" onSelect={this.sizeFilter}>\n            Medium\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\" eventKey=\"Large\" onSelect={this.sizeFilter}>\n            Large\n          </Dropdown.Item>\n        </DropdownButton>\n\n        {/* button for sorting by rating*/}\n        <DropdownButton title=\"Sort\" id=\"dropdownButton\">\n          <Dropdown.Item id=\"text\" eventKey=\"All\" onSelect={this.selectSort}>\n            All\n          </Dropdown.Item>\n          <Dropdown.Item id=\"text\" eventKey=\"rating\" onSelect={this.selectSort}>\n            Rating\n          </Dropdown.Item>\n         </DropdownButton>\n      </div>\n\n      {/* /this line takes in the DisplayList instance defined in that istance so as to sshow the fruit's display card info*/}\n        <DisplayList items={this.props.items.filter(this.filter).sort(this.sortCategories)} addToCart={this.addToCart} removeFromCart={this.removeFromCart}/>\n\n{/* /this set of code sets up the cart information to be displayed including the final price*/}\n<h4 id=\"title\"> Cart</h4>\n<h4 id=\"text\"> Total = ${Math.abs(this.state.total.toFixed())}</h4>\n{/* /this line of code allows the \"updated\" list to be displayed after items are added and removed...however the remove is wonky*/}\n<DisplayList items= {this.state.shopping} removeFromCart={this.removeFromCart} addToCart={this.addToCart} />\n  </div>\n\n\n    );\n  }\n}\n\nexport default FilteredList;\n"]},"metadata":{},"sourceType":"module"}