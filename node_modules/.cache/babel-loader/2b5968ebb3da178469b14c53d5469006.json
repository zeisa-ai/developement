{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zinabeisa/Desktop/---/cs1300/development/developement/src/FilteredList.js\";\nimport React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport List from \"./List\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props); //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n\n    this.onSelectFilterType = event => {\n      //TODO Set the state of the filter type in this.state\n      this.setState({\n        type: event\n      });\n    };\n\n    this.onSelectFilterSize = event => {\n      //TODO Set the state of the filter type in this.state\n      this.setState({\n        size: event\n      });\n    };\n\n    this.onSort = event => {\n      //TODO Set the state of the filter type in this.state\n      this.setState({\n        sort: event\n      });\n    };\n\n    this.matchesFilterType = item => {\n      // TODO: add conditions to check if item type is equal to selected type\n      if (this.state.type === \"All\") {\n        return true;\n      } else if (this.state.type === item.type) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.matchesFilterSize = item => {\n      // TODO: add conditions to check if item type is equal to selected type\n      if (this.state.size === \"All\") {\n        return true;\n      } else if (this.state.size === item.size) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n\n    this.sortOptions = (item1, item2) => {\n      if (this.state.sort === \"All\") {\n        return 0;\n      } else if (this.state.sort === \"Popularity\") {\n        return item1.popularity - item2.popularity;\n      }\n    };\n\n    this.filterAndSearch = item => {\n      return item.name.toLowerCase().search(this.state.search) !== -1 && this.matchesFilterType(item) && this.matchesFilterSize(item);\n    };\n\n    this.onAggregatorAdd = item => {\n      const array = [...this.state.shopping, item];\n      this.setState({\n        shopping: array,\n        total: this.state.total + item.price\n      });\n    };\n\n    this.onAggregatorRemove = item => {\n      const removeItem = this.state.shopping.slice();\n      removeItem.splice(item);\n      this.setState({\n        shopping: removeItem\n      });\n      this.setState({\n        shopping: removeItem,\n        total: this.state.total - item.price\n      });\n    };\n\n    this.state = {\n      shopping: [],\n      search: \"\",\n      type: \"All\",\n      size: \"All\",\n      sort: \"All\",\n      items: this.props.items,\n      total: 0\n    };\n  }\n  /*\n   * This function gets called every time a new filter type is selected in the dropdown. Your job is to handle the state\n   * changes that should occur when a new filter type is selected.\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Type\",\n          id: \"dropdown-basic-button\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"All\",\n            onSelect: this.onSelectFilterType,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Desktop\",\n            onSelect: this.onSelectFilterType,\n            children: \"Desktop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Laptop\",\n            onSelect: this.onSelectFilterType,\n            children: \"Laptop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Tablet\",\n            onSelect: this.onSelectFilterType,\n            children: \"Tablet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Phone\",\n            onSelect: this.onSelectFilterType,\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Size\",\n          id: \"dropdown-basic-button\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"All\",\n            onSelect: this.onSelectFilterSize,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Small\",\n            onSelect: this.onSelectFilterSize,\n            children: \"Small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Medium\",\n            onSelect: this.onSelectFilterSize,\n            children: \"Medium\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Large\",\n            onSelect: this.onSelectFilterCompany,\n            children: \"Large\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n          title: \"Sort\",\n          id: \"dropdown-basic-button\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"All\",\n            onSelect: this.onSort,\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"Popularity\",\n            onSelect: this.onSort,\n            children: \"Popularity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        items: this.props.items.filter(this.filterAndSearch).sort(this.sortOptions)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default FilteredList;","map":{"version":3,"sources":["/Users/zinabeisa/Desktop/---/cs1300/development/developement/src/FilteredList.js"],"names":["React","Component","DropdownButton","Dropdown","List","FilteredList","constructor","props","onSelectFilterType","event","setState","type","onSelectFilterSize","size","onSort","sort","matchesFilterType","item","state","matchesFilterSize","sortOptions","item1","item2","popularity","filterAndSearch","name","toLowerCase","search","onAggregatorAdd","array","shopping","total","price","onAggregatorRemove","removeItem","slice","splice","items","render","onSelectFilterCompany","filter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\nimport List from \"./List\";\n\nclass FilteredList extends Component {\n  constructor(props) {\n    super(props);\n\n    //The state is just a list of key/value pairs (like a hashmap)\n    //TODO (FilteredList): Add an additional state variable within this.state called \"type\" and set it to a default value\n    this.state = {\n      shopping: [],\n      search: \"\",\n      type: \"All\",\n      size: \"All\",\n      sort: \"All\",\n      items: this.props.items,\n      total:0\n\n    };\n  }\n\n\n\n  /*\n   * This function gets called every time a new filter type is selected in the dropdown. Your job is to handle the state\n   * changes that should occur when a new filter type is selected.\n   */\n\n  onSelectFilterType = event => {\n    //TODO Set the state of the filter type in this.state\n    this.setState({ type: event});\n  };\n\n  onSelectFilterSize = event => {\n    //TODO Set the state of the filter type in this.state\n    this.setState({ size: event});\n  };\n  onSort = event => {\n    //TODO Set the state of the filter type in this.state\n    this.setState({ sort: event});\n  };\n  //onFavorite = event => {\n    //TODO Set the state of the filter type in this.state\n  //  this.setState({ favorited: event});\n//  } ;\n\n  /*\n   * This function should determine whether the item being passed in matches the type\n   * that we are filtering on. Remember that the selected type we are filtering on is stored\n   * in this.state!\n   * Input: An element from your List component\n   * Output: true or false\n   */\n  matchesFilterType = item => {\n    // TODO: add conditions to check if item type is equal to selected type\n    if(this.state.type === \"All\"){\n      return true;\n    }\n    else if(this.state.type === item.type){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  matchesFilterSize = item => {\n    // TODO: add conditions to check if item type is equal to selected type\n    if(this.state.size === \"All\"){\n      return true;\n    }\n    else if(this.state.size === item.size){\n      return true;\n    }\n    else{\n      return false;\n    }\n  }\n  sortOptions = (item1, item2) => {\n      if (this.state.sort === \"All\") {\n        return 0;\n      }\n      else if (this.state.sort === \"Popularity\"){\n        return item1.popularity - item2.popularity;\n      }\n    }\n\n  /*\n   * The function is passed into a builtin filter() function. filter() calls this function on every element\n   * in the list. If this fucntion returns true for a given element, filter() will add that element to its\n   * return list.\n   */\n  filterAndSearch = item => {\n    return item.name.toLowerCase().search(this.state.search) !== -1 && this.matchesFilterType(item) && this.matchesFilterSize(item);\n  }\n\nonAggregatorAdd = item=>{\n  const array = [...this.state.shopping, item]\n  this.setState({shopping: array, total: this.state.total+item.price});\n};\n\nonAggregatorRemove = item => {\n  const removeItem = this.state.shopping.slice();\n  removeItem.splice(item);\n  this.setState({shopping: removeItem})\n  this.setState({shopping: removeItem, total: this.state.total-item.price});\n};\n  render() {\n    return (\n      <div className=\"filter-list\">\n        <div className = \"buttons\">\n        <DropdownButton title=\"Type\" id=\"dropdown-basic-button\">\n          <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterType}>\n            All\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Desktop\" onSelect={this.onSelectFilterType}>\n            Desktop\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Laptop\" onSelect={this.onSelectFilterType}>\n            Laptop\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Tablet\" onSelect={this.onSelectFilterType}>\n            Tablet\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Phone\" onSelect={this.onSelectFilterType}>\n            Phone\n          </Dropdown.Item>\n        </DropdownButton>\n\n        <DropdownButton title=\"Size\" id=\"dropdown-basic-button\">\n          <Dropdown.Item eventKey=\"All\" onSelect={this.onSelectFilterSize}>\n              All\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Small\" onSelect={this.onSelectFilterSize}>\n            Small\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Medium\" onSelect={this.onSelectFilterSize}>\n            Medium\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Large\" onSelect={this.onSelectFilterCompany}>\n            Large\n          </Dropdown.Item>\n        </DropdownButton>\n\n        <DropdownButton title=\"Sort\" id=\"dropdown-basic-button\">\n          <Dropdown.Item eventKey=\"All\" onSelect={this.onSort}>\n            All\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"Popularity\" onSelect={this.onSort}>\n            Popularity\n          </Dropdown.Item>\n\n\n         </DropdownButton>\n      </div>\n\n        <List items={this.props.items.filter(this.filterAndSearch).sort(this.sortOptions)} />\n  </div>\n\n    );\n  }\n}\n\nexport default FilteredList;\n"]},"metadata":{},"sourceType":"module"}